#include <bits/stdc++.h> 
using namespace std;
int f (int ind ,vector<int>&nums , vector<int>&dp){
    if(ind==0){
        return nums[0];
    }
    if(ind<0) return 0;
    if(dp[ind]!=-1) return dp[ind];                    
    int pick=nums[ind]+f(ind-2,nums,dp);

    int notpick=0+f(ind-1,nums,dp);

    return dp[ind]=max(pick,notpick);
}
int maximumNonAdjacentSum(vector<int> &nums) {
  // Write your code here.
  vector<int> dp(nums.size(), -1);
  return f(nums.size() - 1, nums, dp);
  int dp[nums.size()];
  dp[0]=nums[0];
  dp[1]=max(nums[1],nums[0]);
  for(int i=2 ; i <)
}
